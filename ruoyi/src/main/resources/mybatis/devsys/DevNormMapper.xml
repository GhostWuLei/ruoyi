<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.devsys.mapper.DevNormMapper">
    
    <resultMap type="DevNorm" id="DevNormResult">
        <result property="normId"    column="norm_id"    />
        <result property="normName"    column="norm_name"    />
        <result property="equipId"    column="equip_id"    />
        <result property="normValue"    column="norm_value"    />
        <result property="normUnit"    column="norm_unit"    />
        <result property="fname"    column="fname"    />
        <result property="fpath"    column="fpath"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDevNormVo">
        select norm_id, norm_name, equip_id, norm_value, norm_unit, fname, fpath, remark, create_by, create_time, update_by, update_time from dev_norm
    </sql>

    <select id="selectDevNormList" parameterType="DevNorm" resultMap="DevNormResult">
        <include refid="selectDevNormVo"/>
        <where>  
            <if test="normName != null  and normName != ''"> and norm_name like concat('%', #{normName}, '%')</if>
            <if test="equipId != null and equipId != ''"> and equip_id = #{equipId}</if>
        </where>
    </select>
    
    <select id="selectDevNormById" parameterType="Long" resultMap="DevNormResult">
        <include refid="selectDevNormVo"/>
        where norm_id = #{normId}
    </select>
        
    <insert id="insertDevNorm" parameterType="DevNorm" useGeneratedKeys="true" keyProperty="normId">
        insert into dev_norm
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="normName != null  and normName != ''">norm_name,</if>
            <if test="equipId != null and equipId != ''">equip_id,</if>
            <if test="normValue != null and normValue != ''">norm_value,</if>
            <if test="normUnit != null and normUnit != ''">norm_unit,</if>
            <if test="fname != null and fname != ''">fname,</if>
            <if test="fpath != null and fpath != ''">fpath,</if>
            <if test="remark != null and remark != ''">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="normName != null  and normName != ''">#{normName},</if>
            <if test="equipId != null and equipId != ''">#{equipId},</if>
            <if test="normValue != null and normValue != ''">#{normValue},</if>
            <if test="normUnit != null and normUnit != ''">#{normUnit},</if>
            <if test="fname != null and fname != ''">#{fname},</if>
            <if test="fpath != null and fpath != ''">#{fpath},</if>
            <if test="remark != null and remark != ''">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            sysdate()
         </trim>
    </insert>

    <update id="updateDevNorm" parameterType="DevNorm">
        update dev_norm
        <trim prefix="SET" suffixOverrides=",">
            <if test="normName != null  and normName != ''">norm_name = #{normName},</if>
            <if test="equipId != null and equipId != ''">equip_id = #{equipId},</if>
            <if test="normValue != null">norm_value = #{normValue},</if>
            <if test="normUnit != null">norm_unit = #{normUnit},</if>
            <if test="fname != null">fname = #{fname},</if>
            <if test="fpath != null">fpath = #{fpath},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </trim>
        where norm_id = #{normId}
    </update>

    <delete id="deleteDevNormById" parameterType="Long">
        delete from dev_norm where norm_id = #{normId}
    </delete>

    <delete id="deleteDevNormByIds" parameterType="String">
        delete from dev_norm where norm_id in 
        <foreach item="normId" collection="array" open="(" separator="," close=")">
            #{normId}
        </foreach>
    </delete>
    
</mapper>